#include "ui/menudef.h"

#include "ui_mp/scriptmenus/opencj_common.inc"

#define ADDPREFIX(val)  OPENCJDVAR("end_")val

#define BORDER_ORG_FIX(val)         (val-2)
#define BORDER_SIZE_FIX(val)        (val+2)

#define NR_MAP_ICONS_X              3
#define NR_MAP_ICONS_Y              3

#define MAPNAME_SIZE_Y              10
#define MAP_ICON_SIZE_X             128 // 16:9
#define MAP_ICON_SIZE_Y             72  // 16:9
#define MAP_ICON_SPACING            10 // x and y spacing between each map icon

#define MENU_SPACING                10 // Spacing between menu and inner elements
#define MENU_SIZE_X                 ((2*MENU_SPACING)+(NR_MAP_ICONS_X*MAP_ICON_SIZE_X)+((NR_MAP_ICONS_X-1)*MAP_ICON_SPACING))
#define MENU_SIZE_Y                 ((2*MENU_SPACING)+(NR_MAP_ICONS_Y*MAP_ICON_SIZE_Y)+((NR_MAP_ICONS_Y+1)*MAP_ICON_SPACING))
#define MENU_ORG_X                  ((FULLSCREEN_X - MENU_SIZE_X) / 2)
#define MENU_ORG_Y                  ((FULLSCREEN_Y - MENU_SIZE_Y) / 2)

#define EXPLAINER_LINE_SIZE_X       (MENU_SIZE_X/2)
#define EXPLAINER_LINE_SIZE_Y       1
#define EXPLAINER_LINE_ORG_X        (MENU_ORG_X+(EXPLAINER_LINE_SIZE_X/2))
#define EXPLAINER_LINE_ORG_Y        (MENU_ORG_Y-10)

#define EXPLAINER_TEXT_SIZE_X       MENU_SIZE_X
#define EXPLAINER_TEXT_SIZE_Y       20
#define EXPLAINER_TEXT_ORG_X        MENU_ORG_X
#define EXPLAINER_TEXT_ORG_Y        (EXPLAINER_LINE_ORG_Y-EXPLAINER_TEXT_SIZE_Y)

#define LOADING_TEXT_SIZE_X         (EXPLAINER_TEXT_SIZE_X-200)
#define LOADING_TEXT_SIZE_Y         20
#define LOADING_TEXT_ORG_X          (EXPLAINER_TEXT_ORG_X+100)
#define LOADING_TEXT_ORG_Y          EXPLAINER_TEXT_ORG_Y
#define LOADING_TEXT                "Loading map.."

#define MAP_ICON_ORG_X_IDX(idx)     (MENU_ORG_X + MENU_SPACING + (idx * (MAP_ICON_SIZE_X + MAP_ICON_SPACING)))
#define MAP_ICON_ORG_Y_IDX(idx)     (MENU_ORG_Y + MENU_SPACING + (idx * (MAPNAME_SIZE_Y + MAP_ICON_SIZE_Y + MAP_ICON_SPACING)))

#define MAP_VOTES_SIZE_X            MAP_ICON_SIZE_X
#define MAP_VOTES_SIZE_Y            15
#define MAP_VOTES_ORG_X_IDX(idx)    MAP_ICON_ORG_X_IDX(idx)
#define MAP_VOTES_ORG_Y_IDX(idx)    (MAP_ICON_ORG_Y_IDX(idx) + MAP_ICON_SIZE_Y - MAP_VOTES_SIZE_Y)

// A layer of map icons horizontally spread:
#define MAP1_ICON_ORG_X             MAP_ICON_ORG_X_IDX(0)
#define MAP1_ICON_ORG_Y             MAP_ICON_ORG_Y_IDX(0)
#define MAP2_ICON_ORG_X             MAP_ICON_ORG_X_IDX(1)
#define MAP2_ICON_ORG_Y             MAP_ICON_ORG_Y_IDX(0)
#define MAP3_ICON_ORG_X             MAP_ICON_ORG_X_IDX(2)
#define MAP3_ICON_ORG_Y             MAP_ICON_ORG_Y_IDX(0)
// And another layer of map icons under that:
#define MAP4_ICON_ORG_X             MAP_ICON_ORG_X_IDX(0)
#define MAP4_ICON_ORG_Y             MAP_ICON_ORG_Y_IDX(1)
#define MAP5_ICON_ORG_X             MAP_ICON_ORG_X_IDX(1)
#define MAP5_ICON_ORG_Y             MAP_ICON_ORG_Y_IDX(1)
#define MAP6_ICON_ORG_X             MAP_ICON_ORG_X_IDX(2)
#define MAP6_ICON_ORG_Y             MAP_ICON_ORG_Y_IDX(1)
// And another one
#define MAP7_ICON_ORG_X             MAP_ICON_ORG_X_IDX(0)
#define MAP7_ICON_ORG_Y             MAP_ICON_ORG_Y_IDX(2)
#define MAP8_ICON_ORG_X             MAP_ICON_ORG_X_IDX(1)
#define MAP8_ICON_ORG_Y             MAP_ICON_ORG_Y_IDX(2)
#define MAP9_ICON_ORG_X             MAP_ICON_ORG_X_IDX(2)
#define MAP9_ICON_ORG_Y             MAP_ICON_ORG_Y_IDX(2)

// Votes for each map
#define MAP1_VOTES_ORG_X            MAP_VOTES_ORG_X_IDX(0)
#define MAP1_VOTES_ORG_Y            MAP_VOTES_ORG_Y_IDX(0)
#define MAP2_VOTES_ORG_X            MAP_VOTES_ORG_X_IDX(1)
#define MAP2_VOTES_ORG_Y            MAP_VOTES_ORG_Y_IDX(0)
#define MAP3_VOTES_ORG_X            MAP_VOTES_ORG_X_IDX(2)
#define MAP3_VOTES_ORG_Y            MAP_VOTES_ORG_Y_IDX(0)

#define MAP4_VOTES_ORG_X            MAP_VOTES_ORG_X_IDX(0)
#define MAP4_VOTES_ORG_Y            MAP_VOTES_ORG_Y_IDX(1)
#define MAP5_VOTES_ORG_X            MAP_VOTES_ORG_X_IDX(1)
#define MAP5_VOTES_ORG_Y            MAP_VOTES_ORG_Y_IDX(1)
#define MAP6_VOTES_ORG_X            MAP_VOTES_ORG_X_IDX(2)
#define MAP6_VOTES_ORG_Y            MAP_VOTES_ORG_Y_IDX(1)

#define MAP7_VOTES_ORG_X            MAP_VOTES_ORG_X_IDX(0)
#define MAP7_VOTES_ORG_Y            MAP_VOTES_ORG_Y_IDX(2)
#define MAP8_VOTES_ORG_X            MAP_VOTES_ORG_X_IDX(1)
#define MAP8_VOTES_ORG_Y            MAP_VOTES_ORG_Y_IDX(2)
#define MAP9_VOTES_ORG_X            MAP_VOTES_ORG_X_IDX(2)
#define MAP9_VOTES_ORG_Y            MAP_VOTES_ORG_Y_IDX(2)


// Numer gets shown
#define WHEN_HAS_VOTE(num)         (dvarInt(ADDPREFIX("votes")#num) > 0)

// Blue outline
#define WHEN_MY_VOTE(num)          (dvarString(ADDPREFIX("voted")) == #num)

// No outline
#define WHEN_NOT_MY_VOTE(num)      (dvarString(ADDPREFIX("voted")) != #num)

// "Click to vote" vs "Loading next map" text
#define WHEN_END_VOTE_ACTIVE()     (dvarInt(ADDPREFIX("status")) == 1) // Voting
#define WHEN_END_VOTE_ENDED()      (dvarInt(ADDPREFIX("status")) == 2) // Loading

// Green bar
#define WHEN_WINNING_VOTE(num)          (dvarString(ADDPREFIX("winning")) == #num)
#define WHEN_ACTIVE_WINNING_VOTE(num)   (WHEN_END_VOTE_ACTIVE() && WHEN_WINNING_VOTE(num))

// No green bar
#define WHEN_NOT_WINNING_VOTE(num)      (WHEN_END_VOTE_ACTIVE()() && WHEN_HAS_VOTE(num) && (dvarString(ADDPREFIX("winning")) != #num))

// Loading map bar
#define WHEN_LOADING_WINNER(num)        (WHEN_END_VOTE_ENDED() && WHEN_WINNING_VOTE(num))

#define WHEN_ACTIVE_AND_HAS_VOTE(num)   (WHEN_END_VOTE_ACTIVE() && WHEN_HAS_VOTE(num))


{
    menuDef
    {
        name        opencj_endmapvote
        rect        DEFAULT_RECT(0 0 FULLSCREEN_X FULLSCREEN_Y)
        focuscolor  COLOR_UNFOCUSED
        style       WINDOW_STYLE_EMPTY
        blurWorld   5.0
        onEsc
        {
            // Don't allow closing
        }
    
    // Outer background
        itemDef
        {
            style       WINDOW_STYLE_FILLED
            backcolor   BLACK_COLOR
            rect        DEFAULT_RECT(0 0 (MENU_SIZE_X+10) (MENU_SIZE_Y+10))
            origin      (MENU_ORG_X-5) (MENU_ORG_Y-5)
            visible     1
            decoration
        }

    // Inner background
        itemDef
        {
            style       WINDOW_STYLE_FILLED
            backcolor   RAISIN_COLOR
            rect        DEFAULT_RECT(0 0 MENU_SIZE_X MENU_SIZE_Y)
            origin      MENU_ORG_X MENU_ORG_Y
            visible     1
            decoration
        }

    // Explainer line
        FIXED_RECT_WHEN(WHEN_END_VOTE_ACTIVE(), WHITE_COLOR, EXPLAINER_LINE_ORG_X, EXPLAINER_LINE_ORG_Y, EXPLAINER_LINE_SIZE_X, EXPLAINER_LINE_SIZE_Y)

    // Explainer text
        // When map vote active
        FIXED_RECT_TXTCENTER_STYLED_WHEN(WHEN_END_VOTE_ACTIVE(), "Click to vote for the next map", 0.34, NO_COLOR, WHITE_COLOR, EXPLAINER_TEXT_ORG_X, EXPLAINER_TEXT_ORG_Y, EXPLAINER_TEXT_SIZE_X, EXPLAINER_TEXT_SIZE_Y)

    // Map icons
        // Map icon itself
        SEL_DVARSHADER_RECT(vote1, ADDPREFIX("mapimage1"), MAP1_ICON_ORG_X, MAP1_ICON_ORG_Y, MAP_ICON_SIZE_X, MAP_ICON_SIZE_Y)
        SEL_DVARSHADER_RECT(vote2, ADDPREFIX("mapimage2"), MAP2_ICON_ORG_X, MAP2_ICON_ORG_Y, MAP_ICON_SIZE_X, MAP_ICON_SIZE_Y)
        SEL_DVARSHADER_RECT(vote3, ADDPREFIX("mapimage3"), MAP3_ICON_ORG_X, MAP3_ICON_ORG_Y, MAP_ICON_SIZE_X, MAP_ICON_SIZE_Y)
        SEL_DVARSHADER_RECT(vote4, ADDPREFIX("mapimage4"), MAP4_ICON_ORG_X, MAP4_ICON_ORG_Y, MAP_ICON_SIZE_X, MAP_ICON_SIZE_Y)
        SEL_DVARSHADER_RECT(vote5, ADDPREFIX("mapimage5"), MAP5_ICON_ORG_X, MAP5_ICON_ORG_Y, MAP_ICON_SIZE_X, MAP_ICON_SIZE_Y)
        SEL_DVARSHADER_RECT(vote6, ADDPREFIX("mapimage6"), MAP6_ICON_ORG_X, MAP6_ICON_ORG_Y, MAP_ICON_SIZE_X, MAP_ICON_SIZE_Y)
        SEL_DVARSHADER_RECT(vote7, ADDPREFIX("mapimage7"), MAP7_ICON_ORG_X, MAP7_ICON_ORG_Y, MAP_ICON_SIZE_X, MAP_ICON_SIZE_Y)
        SEL_DVARSHADER_RECT(vote8, ADDPREFIX("mapimage8"), MAP8_ICON_ORG_X, MAP8_ICON_ORG_Y, MAP_ICON_SIZE_X, MAP_ICON_SIZE_Y)
        SEL_DVARSHADER_RECT(vote9, ADDPREFIX("mapimage9"), MAP9_ICON_ORG_X, MAP9_ICON_ORG_Y, MAP_ICON_SIZE_X, MAP_ICON_SIZE_Y)
        
        // My vote (adds blue border)
        FIXED_RECT_OUTLINE_SHOW(ADDPREFIX("voted"), "1",     DIM_BLUE_COLOR, BORDER_ORG_FIX(MAP1_ICON_ORG_X), BORDER_ORG_FIX(MAP1_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_SHOW(ADDPREFIX("voted"), "2",     DIM_BLUE_COLOR, BORDER_ORG_FIX(MAP2_ICON_ORG_X), BORDER_ORG_FIX(MAP2_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_SHOW(ADDPREFIX("voted"), "3",     DIM_BLUE_COLOR, BORDER_ORG_FIX(MAP3_ICON_ORG_X), BORDER_ORG_FIX(MAP3_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_SHOW(ADDPREFIX("voted"), "4",     DIM_BLUE_COLOR, BORDER_ORG_FIX(MAP4_ICON_ORG_X), BORDER_ORG_FIX(MAP4_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_SHOW(ADDPREFIX("voted"), "5",     DIM_BLUE_COLOR, BORDER_ORG_FIX(MAP5_ICON_ORG_X), BORDER_ORG_FIX(MAP5_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_SHOW(ADDPREFIX("voted"), "6",     DIM_BLUE_COLOR, BORDER_ORG_FIX(MAP6_ICON_ORG_X), BORDER_ORG_FIX(MAP6_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_SHOW(ADDPREFIX("voted"), "7",     DIM_BLUE_COLOR, BORDER_ORG_FIX(MAP7_ICON_ORG_X), BORDER_ORG_FIX(MAP7_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_SHOW(ADDPREFIX("voted"), "8",     DIM_BLUE_COLOR, BORDER_ORG_FIX(MAP8_ICON_ORG_X), BORDER_ORG_FIX(MAP8_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_SHOW(ADDPREFIX("voted"), "9",     DIM_BLUE_COLOR, BORDER_ORG_FIX(MAP9_ICON_ORG_X), BORDER_ORG_FIX(MAP9_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        
        // Currently focused
        FIXED_RECT_OUTLINE_HIDE(focused1, ADDPREFIX("voted"), "1", BORDER_ORG_FIX(MAP1_ICON_ORG_X), BORDER_ORG_FIX(MAP1_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_HIDE(focused2, ADDPREFIX("voted"), "2", BORDER_ORG_FIX(MAP2_ICON_ORG_X), BORDER_ORG_FIX(MAP2_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_HIDE(focused3, ADDPREFIX("voted"), "3", BORDER_ORG_FIX(MAP3_ICON_ORG_X), BORDER_ORG_FIX(MAP3_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_HIDE(focused4, ADDPREFIX("voted"), "4", BORDER_ORG_FIX(MAP4_ICON_ORG_X), BORDER_ORG_FIX(MAP4_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_HIDE(focused5, ADDPREFIX("voted"), "5", BORDER_ORG_FIX(MAP5_ICON_ORG_X), BORDER_ORG_FIX(MAP5_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_HIDE(focused6, ADDPREFIX("voted"), "6", BORDER_ORG_FIX(MAP6_ICON_ORG_X), BORDER_ORG_FIX(MAP6_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_HIDE(focused7, ADDPREFIX("voted"), "7", BORDER_ORG_FIX(MAP7_ICON_ORG_X), BORDER_ORG_FIX(MAP7_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_HIDE(focused8, ADDPREFIX("voted"), "8", BORDER_ORG_FIX(MAP8_ICON_ORG_X), BORDER_ORG_FIX(MAP8_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
        FIXED_RECT_OUTLINE_HIDE(focused9, ADDPREFIX("voted"), "9", BORDER_ORG_FIX(MAP9_ICON_ORG_X), BORDER_ORG_FIX(MAP9_ICON_ORG_Y), BORDER_SIZE_FIX(MAP_ICON_SIZE_X), BORDER_SIZE_FIX(MAP_ICON_SIZE_Y))
    // Map name
        FIXED_RECT_DVARCENTER_STYLED(ADDPREFIX("mapname1"), 0.20, DIM_COLOR, WHITE_COLOR, MAP1_ICON_ORG_X, MAP1_ICON_ORG_Y, MAP_ICON_SIZE_X, MAPNAME_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED(ADDPREFIX("mapname2"), 0.20, DIM_COLOR, WHITE_COLOR, MAP2_ICON_ORG_X, MAP2_ICON_ORG_Y, MAP_ICON_SIZE_X, MAPNAME_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED(ADDPREFIX("mapname3"), 0.20, DIM_COLOR, WHITE_COLOR, MAP3_ICON_ORG_X, MAP3_ICON_ORG_Y, MAP_ICON_SIZE_X, MAPNAME_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED(ADDPREFIX("mapname4"), 0.20, DIM_COLOR, WHITE_COLOR, MAP4_ICON_ORG_X, MAP4_ICON_ORG_Y, MAP_ICON_SIZE_X, MAPNAME_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED(ADDPREFIX("mapname5"), 0.20, DIM_COLOR, WHITE_COLOR, MAP5_ICON_ORG_X, MAP5_ICON_ORG_Y, MAP_ICON_SIZE_X, MAPNAME_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED(ADDPREFIX("mapname6"), 0.20, DIM_COLOR, WHITE_COLOR, MAP6_ICON_ORG_X, MAP6_ICON_ORG_Y, MAP_ICON_SIZE_X, MAPNAME_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED(ADDPREFIX("mapname7"), 0.20, DIM_COLOR, WHITE_COLOR, MAP7_ICON_ORG_X, MAP7_ICON_ORG_Y, MAP_ICON_SIZE_X, MAPNAME_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED(ADDPREFIX("mapname8"), 0.20, DIM_COLOR, WHITE_COLOR, MAP8_ICON_ORG_X, MAP8_ICON_ORG_Y, MAP_ICON_SIZE_X, MAPNAME_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED(ADDPREFIX("mapname9"), 0.20, DIM_COLOR, WHITE_COLOR, MAP9_ICON_ORG_X, MAP9_ICON_ORG_Y, MAP_ICON_SIZE_X, MAPNAME_SIZE_Y)

    // Map vote bars
        // Winning vote
        FIXED_RECT_WHEN(WHEN_ACTIVE_WINNING_VOTE(1), DIM_GREEN_COLOR, MAP1_VOTES_ORG_X, MAP1_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_ACTIVE_WINNING_VOTE(2), DIM_GREEN_COLOR, MAP2_VOTES_ORG_X, MAP2_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_ACTIVE_WINNING_VOTE(3), DIM_GREEN_COLOR, MAP3_VOTES_ORG_X, MAP3_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_ACTIVE_WINNING_VOTE(4), DIM_GREEN_COLOR, MAP4_VOTES_ORG_X, MAP4_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_ACTIVE_WINNING_VOTE(5), DIM_GREEN_COLOR, MAP5_VOTES_ORG_X, MAP5_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_ACTIVE_WINNING_VOTE(6), DIM_GREEN_COLOR, MAP6_VOTES_ORG_X, MAP6_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_ACTIVE_WINNING_VOTE(7), DIM_GREEN_COLOR, MAP7_VOTES_ORG_X, MAP7_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_ACTIVE_WINNING_VOTE(8), DIM_GREEN_COLOR, MAP8_VOTES_ORG_X, MAP8_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_ACTIVE_WINNING_VOTE(9), DIM_GREEN_COLOR, MAP9_VOTES_ORG_X, MAP9_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)

        // Other votes
        FIXED_RECT_WHEN(WHEN_NOT_WINNING_VOTE(1),    DIM_COLOR, MAP1_VOTES_ORG_X, MAP1_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_NOT_WINNING_VOTE(2),    DIM_COLOR, MAP2_VOTES_ORG_X, MAP2_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_NOT_WINNING_VOTE(3),    DIM_COLOR, MAP3_VOTES_ORG_X, MAP3_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_NOT_WINNING_VOTE(4),    DIM_COLOR, MAP4_VOTES_ORG_X, MAP4_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_NOT_WINNING_VOTE(5),    DIM_COLOR, MAP5_VOTES_ORG_X, MAP5_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_NOT_WINNING_VOTE(6),    DIM_COLOR, MAP6_VOTES_ORG_X, MAP6_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_NOT_WINNING_VOTE(7),    DIM_COLOR, MAP7_VOTES_ORG_X, MAP7_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_NOT_WINNING_VOTE(8),    DIM_COLOR, MAP8_VOTES_ORG_X, MAP8_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_WHEN(WHEN_NOT_WINNING_VOTE(9),    DIM_COLOR, MAP9_VOTES_ORG_X, MAP9_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)

        // Loading winning map
        FIXED_RECT_TXTCENTER_WHEN(WHEN_LOADING_WINNER(1), LOADING_TEXT, MILD_DIM_GREEN_COLOR, WHITE_COLOR, MAP1_VOTES_ORG_X, MAP1_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_TXTCENTER_WHEN(WHEN_LOADING_WINNER(2), LOADING_TEXT, MILD_DIM_GREEN_COLOR, WHITE_COLOR, MAP2_VOTES_ORG_X, MAP2_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_TXTCENTER_WHEN(WHEN_LOADING_WINNER(3), LOADING_TEXT, MILD_DIM_GREEN_COLOR, WHITE_COLOR, MAP3_VOTES_ORG_X, MAP3_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_TXTCENTER_WHEN(WHEN_LOADING_WINNER(4), LOADING_TEXT, MILD_DIM_GREEN_COLOR, WHITE_COLOR, MAP4_VOTES_ORG_X, MAP4_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_TXTCENTER_WHEN(WHEN_LOADING_WINNER(5), LOADING_TEXT, MILD_DIM_GREEN_COLOR, WHITE_COLOR, MAP5_VOTES_ORG_X, MAP5_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_TXTCENTER_WHEN(WHEN_LOADING_WINNER(6), LOADING_TEXT, MILD_DIM_GREEN_COLOR, WHITE_COLOR, MAP6_VOTES_ORG_X, MAP6_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_TXTCENTER_WHEN(WHEN_LOADING_WINNER(7), LOADING_TEXT, MILD_DIM_GREEN_COLOR, WHITE_COLOR, MAP7_VOTES_ORG_X, MAP7_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_TXTCENTER_WHEN(WHEN_LOADING_WINNER(8), LOADING_TEXT, MILD_DIM_GREEN_COLOR, WHITE_COLOR, MAP8_VOTES_ORG_X, MAP8_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_TXTCENTER_WHEN(WHEN_LOADING_WINNER(9), LOADING_TEXT, MILD_DIM_GREEN_COLOR, WHITE_COLOR, MAP9_VOTES_ORG_X, MAP9_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)

    // Map vote value
        // Any vote
        FIXED_RECT_DVARCENTER_STYLED_WHEN(ADDPREFIX("votes1"), WHEN_ACTIVE_AND_HAS_VOTE(1), 0.30, NO_COLOR,  WHITE_COLOR, MAP1_VOTES_ORG_X, MAP1_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED_WHEN(ADDPREFIX("votes2"), WHEN_ACTIVE_AND_HAS_VOTE(2), 0.30, NO_COLOR,  WHITE_COLOR, MAP2_VOTES_ORG_X, MAP2_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED_WHEN(ADDPREFIX("votes3"), WHEN_ACTIVE_AND_HAS_VOTE(3), 0.30, NO_COLOR,  WHITE_COLOR, MAP3_VOTES_ORG_X, MAP3_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED_WHEN(ADDPREFIX("votes4"), WHEN_ACTIVE_AND_HAS_VOTE(4), 0.30, NO_COLOR,  WHITE_COLOR, MAP4_VOTES_ORG_X, MAP4_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED_WHEN(ADDPREFIX("votes5"), WHEN_ACTIVE_AND_HAS_VOTE(5), 0.30, NO_COLOR,  WHITE_COLOR, MAP5_VOTES_ORG_X, MAP5_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED_WHEN(ADDPREFIX("votes6"), WHEN_ACTIVE_AND_HAS_VOTE(6), 0.30, NO_COLOR,  WHITE_COLOR, MAP6_VOTES_ORG_X, MAP6_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED_WHEN(ADDPREFIX("votes7"), WHEN_ACTIVE_AND_HAS_VOTE(7), 0.30, NO_COLOR,  WHITE_COLOR, MAP7_VOTES_ORG_X, MAP7_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED_WHEN(ADDPREFIX("votes8"), WHEN_ACTIVE_AND_HAS_VOTE(8), 0.30, NO_COLOR,  WHITE_COLOR, MAP8_VOTES_ORG_X, MAP8_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)
        FIXED_RECT_DVARCENTER_STYLED_WHEN(ADDPREFIX("votes9"), WHEN_ACTIVE_AND_HAS_VOTE(9), 0.30, NO_COLOR,  WHITE_COLOR, MAP9_VOTES_ORG_X, MAP9_VOTES_ORG_Y, MAP_VOTES_SIZE_X, MAP_VOTES_SIZE_Y)


    } // menuDef
}