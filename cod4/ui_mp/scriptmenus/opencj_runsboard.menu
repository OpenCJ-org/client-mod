#include "ui/menudef.h"
#include "ui_mp/scriptmenus/opencj_common.inc"

#define ADDPREFIX(val)          OPENCJDVAR("board_")val

#define RUNSBOARD_ORG_X         LEADERBOARD_ORG_X
#define RUNSBOARD_ORG_Y         LEADERBOARD_ORG_Y
#define RUNSBOARD_SIZE_X        LEADERBOARD_SIZE_X
#define RUNSBOARD_SIZE_Y        LEADERBOARD_SIZE_Y

// Map route "column"
#define MR_ORG_X                (RUNSBOARD_ORG_X+10)
#define MR_ORG_Y                (RUNSBOARD_ORG_Y+10)
#define MR_SIZE_X               80
#define MR_SIZE_Y               (RUNSBOARD_SIZE_Y-60)
#define MR_CELL_SIZE_X          MR_SIZE_X
#define MR_CELL_SIZE_Y          15
#define MR_ORG_X_IDX(_idx)      (MR_ORG_X) // They're right below each other
#define MR_ORG_Y_IDX(_idx)      (MR_ORG_Y+(MR_CELL_SIZE_Y*_idx)+_idx) // +_idx for small black line without wasting itemDef

// Run # column
#define NR_ORG_X                (MR_ORG_X+MR_CELL_SIZE_X+10)
#define NR_ORG_Y                MR_ORG_Y
#define NR_CELL_SIZE_X          25
#define NR_CELL_SIZE_Y          MR_CELL_SIZE_Y
#define NR_ORG_X_IDX(_idx)      (NR_ORG_X) // They're right below each other
#define NR_ORG_Y_IDX(_idx)      (NR_ORG_Y+(NR_CELL_SIZE_Y*_idx)+_idx) // +_idx for small black line without wasting itemDef

// Run name column
#define NAME_ORG_X              (NR_ORG_X+NR_CELL_SIZE_X+1) // for small black line
#define NAME_ORG_Y              NR_ORG_Y
#define NAME_CELL_SIZE_X        100
#define NAME_CELL_SIZE_Y        NR_CELL_SIZE_Y
#define NAME_ORG_X_IDX(_idx)    (NAME_ORG_X) // right below each other
#define NAME_ORG_Y_IDX(_idx)    (NAME_ORG_Y+(NAME_CELL_SIZE_Y*_idx)+_idx) // Small black line

// Run time column
#define TIME_ORG_X              (NAME_ORG_X+NAME_CELL_SIZE_X+1) // for small black line
#define TIME_ORG_Y              NAME_ORG_Y
#define TIME_CELL_SIZE_X        60
#define TIME_CELL_SIZE_Y        NAME_CELL_SIZE_Y
#define TIME_ORG_X_IDX(_idx)    (TIME_ORG_X) // right below each other
#define TIME_ORG_Y_IDX(_idx)    (TIME_ORG_Y+(TIME_CELL_SIZE_Y*_idx)+_idx) // Small black line
#define TIME_ORDER_FRAME_SIZE_X MR_CELL_SIZE_Y // Not a typo, cause we want the icon square at all times
#define TIME_ORDER_FRAME_SIZE_Y MR_CELL_SIZE_Y
#define TIME_ORDER_SPACING      4 // How much room there is around the icon. This is because we want icon smaller than the frame
#define TIME_ORDER_ICON_ORG_X   (TIME_ORG_X+TIME_CELL_SIZE_X-TIME_ORDER_FRAME_SIZE_X+TIME_ORDER_SPACING)
#define TIME_ORDER_ICON_ORG_Y   (TIME_ORG_Y+TIME_ORDER_SPACING)
#define TIME_ORDER_ICON_SIZE_X  (TIME_ORDER_FRAME_SIZE_X-(2*TIME_ORDER_SPACING))
#define TIME_ORDER_ICON_SIZE_Y  (TIME_ORDER_FRAME_SIZE_Y-(2*TIME_ORDER_SPACING))
#define WHEN_TIME_ASC           (dvarInt(ADDPREFIX("sort_time")) == 1)
#define WHEN_TIME_DESC          (dvarInt(ADDPREFIX("sort_time")) == 2)

// Run RPG column
#define RPG_ORG_X              (TIME_ORG_X+TIME_CELL_SIZE_X+1) // for small black line
#define RPG_ORG_Y              TIME_ORG_Y
#define RPG_CELL_SIZE_X        40
#define RPG_CELL_SIZE_Y        TIME_CELL_SIZE_Y
#define RPG_ORG_X_IDX(_idx)    (RPG_ORG_X) // right below each other
#define RPG_ORG_Y_IDX(_idx)    (RPG_ORG_Y+(RPG_CELL_SIZE_Y*_idx)+_idx) // Small black line
#define RPG_ORDER_FRAME_SIZE_X TIME_ORDER_FRAME_SIZE_X
#define RPG_ORDER_FRAME_SIZE_Y TIME_ORDER_FRAME_SIZE_Y
#define RPG_ORDER_SPACING      TIME_ORDER_SPACING
#define RPG_ORDER_ICON_ORG_X   (RPG_ORG_X+RPG_CELL_SIZE_X-RPG_ORDER_FRAME_SIZE_X+RPG_ORDER_SPACING)
#define RPG_ORDER_ICON_ORG_Y   (RPG_ORG_Y+RPG_ORDER_SPACING)
#define RPG_ORDER_ICON_SIZE_X  (RPG_ORDER_FRAME_SIZE_X-(2*RPG_ORDER_SPACING))
#define RPG_ORDER_ICON_SIZE_Y  (RPG_ORDER_FRAME_SIZE_Y-(2*RPG_ORDER_SPACING))
#define WHEN_RPG_ASC           (dvarInt(ADDPREFIX("sort_rpgs")) == 1)
#define WHEN_RPG_DESC          (dvarInt(ADDPREFIX("sort_rpgs")) == 2)

// Run loads column
#define LOAD_ORG_X              (RPG_ORG_X+RPG_CELL_SIZE_X+1) // for small black line
#define LOAD_ORG_Y              RPG_ORG_Y
#define LOAD_CELL_SIZE_X        40
#define LOAD_CELL_SIZE_Y        RPG_CELL_SIZE_Y
#define LOAD_ORG_X_IDX(_idx)    (LOAD_ORG_X) // right below each other
#define LOAD_ORG_Y_IDX(_idx)    (LOAD_ORG_Y+(LOAD_CELL_SIZE_Y*_idx)+_idx) // Small black line
#define LOAD_ORDER_FRAME_SIZE_X RPG_ORDER_FRAME_SIZE_X
#define LOAD_ORDER_FRAME_SIZE_Y RPG_ORDER_FRAME_SIZE_Y
#define LOAD_ORDER_SPACING      RPG_ORDER_SPACING
#define LOAD_ORDER_ICON_ORG_X   (LOAD_ORG_X+LOAD_CELL_SIZE_X-LOAD_ORDER_FRAME_SIZE_X+LOAD_ORDER_SPACING)
#define LOAD_ORDER_ICON_ORG_Y   (LOAD_ORG_Y+LOAD_ORDER_SPACING)
#define LOAD_ORDER_ICON_SIZE_X  (LOAD_ORDER_FRAME_SIZE_X-(2*LOAD_ORDER_SPACING))
#define LOAD_ORDER_ICON_SIZE_Y  (LOAD_ORDER_FRAME_SIZE_Y-(2*LOAD_ORDER_SPACING))
#define WHEN_LOAD_ASC           (dvarInt(ADDPREFIX("sort_loads")) == 1)
#define WHEN_LOAD_DESC          (dvarInt(ADDPREFIX("sort_loads")) == 2)

// Run date column
#define DATE_ORG_X              (LOAD_ORG_X+LOAD_CELL_SIZE_X+1) // for small black line
#define DATE_ORG_Y              LOAD_ORG_Y
#define DATE_CELL_SIZE_X        80
#define DATE_CELL_SIZE_Y        LOAD_CELL_SIZE_Y
#define DATE_ORG_X_IDX(_idx)    (DATE_ORG_X) // right below each other
#define DATE_ORG_Y_IDX(_idx)    (DATE_ORG_Y+(DATE_CELL_SIZE_Y*_idx)+_idx) // Small black line
#define DATE_ORDER_FRAME_SIZE_X LOAD_ORDER_FRAME_SIZE_X
#define DATE_ORDER_FRAME_SIZE_Y LOAD_ORDER_FRAME_SIZE_Y
#define DATE_ORDER_SPACING      LOAD_ORDER_SPACING
#define DATE_ORDER_ICON_ORG_X   (DATE_ORG_X+DATE_CELL_SIZE_X-DATE_ORDER_FRAME_SIZE_X+DATE_ORDER_SPACING)
#define DATE_ORDER_ICON_ORG_Y   (DATE_ORG_Y+DATE_ORDER_SPACING)
#define DATE_ORDER_ICON_SIZE_X  (DATE_ORDER_FRAME_SIZE_X-(2*DATE_ORDER_SPACING))
#define DATE_ORDER_ICON_SIZE_Y  (DATE_ORDER_FRAME_SIZE_Y-(2*DATE_ORDER_SPACING))
#define WHEN_DATE_ASC           (dvarInt(ADDPREFIX("sort_date")) == 1)
#define WHEN_DATE_DESC          (dvarInt(ADDPREFIX("sort_date")) == 2)

// Category column: FPS
#define CAT_FPS_ORG_X              (DATE_ORG_X+DATE_CELL_SIZE_X+1) // for small black line
#define CAT_FPS_ORG_Y              DATE_ORG_Y
#define CAT_FPS_CELL_SIZE_X        35
#define CAT_FPS_CELL_SIZE_Y        DATE_CELL_SIZE_Y
#define CAT_FPS_ORG_X_IDX(_idx)    (CAT_FPS_ORG_X) // right below each other
#define CAT_FPS_ORG_Y_IDX(_idx)    (CAT_FPS_ORG_Y+(CAT_FPS_CELL_SIZE_Y*_idx)+_idx) // Small black line

// Category column: elevator
#define CAT_ELE_ORG_X              (CAT_FPS_ORG_X+CAT_FPS_CELL_SIZE_X+1) // for small black line
#define CAT_ELE_ORG_Y              CAT_FPS_ORG_Y
#define CAT_ELE_CELL_SIZE_X        15
#define CAT_ELE_CELL_SIZE_Y        CAT_FPS_CELL_SIZE_Y
#define CAT_ELE_ORG_X_IDX(_idx)    (CAT_ELE_ORG_X) // right below each other
#define CAT_ELE_ORG_Y_IDX(_idx)    (CAT_ELE_ORG_Y+(CAT_ELE_CELL_SIZE_Y*_idx)+_idx) // Small black line
#define WHEN_ELE_YES               (dvarInt(ADDPREFIX("ele_allow")) != 0)
#define WHEN_ELE_NO                (dvarInt(ADDPREFIX("ele_allow")) == 0)

// Category column: shortcuts
#define CAT_ANYPCT_ORG_X           (CAT_ELE_ORG_X+CAT_ELE_CELL_SIZE_X+1) // for small black line
#define CAT_ANYPCT_ORG_Y           CAT_ELE_ORG_Y
#define CAT_ANYPCT_CELL_SIZE_X     15
#define CAT_ANYPCT_CELL_SIZE_Y     CAT_ELE_CELL_SIZE_Y
#define CAT_ANYPCT_ORG_X_IDX(_idx) (CAT_ANYPCT_ORG_X) // right below each other
#define CAT_ANYPCT_ORG_Y_IDX(_idx) (CAT_ANYPCT_ORG_Y+(CAT_ANYPCT_CELL_SIZE_Y*_idx)+_idx) // Small black line
#define WHEN_ANYPCT_YES            (dvarInt(ADDPREFIX("any_allow")) != 0)
#define WHEN_ANYPCT_NO             (dvarInt(ADDPREFIX("any_allow")) == 0)

// Category column: TAS
#define CAT_TAS_ORG_X              (CAT_ANYPCT_ORG_X+CAT_ANYPCT_CELL_SIZE_X+1) // for small black line
#define CAT_TAS_ORG_Y              CAT_ANYPCT_ORG_Y
#define CAT_TAS_CELL_SIZE_X        15
#define CAT_TAS_CELL_SIZE_Y        CAT_ANYPCT_CELL_SIZE_Y
#define CAT_TAS_ORG_X_IDX(_idx)    (CAT_TAS_ORG_X) // right below each other
#define CAT_TAS_ORG_Y_IDX(_idx)    (CAT_TAS_ORG_Y+(CAT_TAS_CELL_SIZE_Y*_idx)+_idx) // Small black line
#define WHEN_TAS_YES               (dvarInt(ADDPREFIX("tas_allow")) != 0)
#define WHEN_TAS_NO                (dvarInt(ADDPREFIX("tas_allow")) == 0)

// Page button sizes and locations
    // General
#define PAGE_BUTTON_SIZE_X          15
#define PAGE_BUTTON_SIZE_Y          15
#define PAGE_TEXT_SIZE_X            (MR_SIZE_X-(2*PAGE_BUTTON_SIZE_X))
#define PAGE_TEXT_SIZE_Y            PAGE_BUTTON_SIZE_Y

    // Route pages
#define ROUTE_PAGE_IDX              10
#define ROUTE_PREV_PAGE_BTN_ORG_X   MR_ORG_X_IDX(ROUTE_PAGE_IDX)
#define ROUTE_PREV_PAGE_BTN_ORG_Y   MR_ORG_Y_IDX(ROUTE_PAGE_IDX)
#define ROUTE_NEXT_PAGE_BTN_ORG_X   (ROUTE_PREV_PAGE_BTN_ORG_X+MR_CELL_SIZE_X-PAGE_BUTTON_SIZE_X)
#define ROUTE_NEXT_PAGE_BTN_ORG_Y   ROUTE_PREV_PAGE_BTN_ORG_Y
#define ROUTE_PAGE_TXT_ORG_X        (ROUTE_PREV_PAGE_BTN_ORG_X+PAGE_BUTTON_SIZE_X)
#define ROUTE_PAGE_TXT_ORG_Y        ROUTE_NEXT_PAGE_BTN_ORG_Y

#define WHEN_RTPAGE_S_MAX           (dvarInt(ADDPREFIX("rtpage")) < dvarInt(ADDPREFIX("rtpagemax")))
#define WHEN_RTPAGE_G_ONE           (dvarInt(ADDPREFIX("rtpage")) > 1)
#define WHEN_RTSELECTED(val)        (dvarInt(ADDPREFIX("rtselected")) == val)
#define WHEN_RTSELECTED_NOT(val)    (dvarInt(ADDPREFIX("rtselected")) != val)

    // Runsboard pages
#define BOARD_PAGE_IDX                 11
#define BOARD_PREV_PAGE_BTN_ORG_X      (RUNSBOARD_ORG_X+(RUNSBOARD_SIZE_X/2)-(PAGE_TEXT_SIZE_X/2)-PAGE_BUTTON_SIZE_X)
#define BOARD_PREV_PAGE_BTN_ORG_Y      MR_ORG_Y_IDX(BOARD_PAGE_IDX)
#define BOARD_NEXT_PAGE_BTN_ORG_X      (BOARD_PREV_PAGE_BTN_ORG_X+MR_CELL_SIZE_X-PAGE_BUTTON_SIZE_X)
#define BOARD_NEXT_PAGE_BTN_ORG_Y      MR_ORG_Y_IDX(BOARD_PAGE_IDX)
#define BOARD_PAGE_TXT_ORG_X           (BOARD_PREV_PAGE_BTN_ORG_X+PAGE_BUTTON_SIZE_X)
#define BOARD_PAGE_TXT_ORG_Y           BOARD_PREV_PAGE_BTN_ORG_Y

#define WHEN_BOARDPAGE_S_MAX     (dvarInt(ADDPREFIX("page")) < dvarInt(ADDPREFIX("pagemax")))
#define WHEN_BOARDPAGE_G_ONE     (dvarInt(ADDPREFIX("page")) > 1)

#define WHEN_NAME_NOT_EMPTY(num) (dvarString(ADDPREFIX("name"#num)) != "")

// Exit button
#define EXITBTN_IDX             11
#define EXITBTN_ORG_X           ROUTE_PREV_PAGE_BTN_ORG_X
#define EXITBTN_ORG_Y           MR_ORG_Y_IDX(EXITBTN_IDX)
#define EXITBTN_SIZE_X          MR_CELL_SIZE_X
#define EXITBTN_SIZE_Y          MR_CELL_SIZE_Y

{
    menuDef
    {
        name        opencj_runsboard
        rect        DEFAULT_RECT(0 0 FULLSCREEN_X FULLSCREEN_Y)
        focuscolor  COLOR_UNFOCUSED
        style       WINDOW_STYLE_EMPTY
        blurWorld   5.0
        onOpen
        {
            scriptMenuResponse "open_runsboard"
        }
        onEsc
        {
            close self;
        }
        
    // Background
        itemDef
        {
            style       WINDOW_STYLE_FILLED
            backcolor   RAISIN_COLOR
            rect        DEFAULT_RECT(0 0 RUNSBOARD_SIZE_X RUNSBOARD_SIZE_Y)
            origin      RUNSBOARD_ORG_X RUNSBOARD_ORG_Y
            visible     1
            decoration
        }
        
    // Map & route section
        /*
        itemDef // Background
        {
            style       WINDOW_STYLE_FILLED
            backcolor   GREYISH_COLOR
            rect        DEFAULT_RECT(0 0 MR_SIZE_X MR_SIZE_Y)
            origin      MR_ORG_X MR_ORG_Y
            visible     1
            decoration
        }
        */
        // Current map
        FIXED_RECT_TXTCENTER("Select route:", GLAUCOUS_COLOR, WHITE_COLOR, MR_ORG_X_IDX(0), MR_ORG_Y_IDX(0), MR_CELL_SIZE_X, MR_CELL_SIZE_Y)

        // Routes (when not selected)
        BUTTON_RECT_DVAR_WHEN(route1, ADDPREFIX("route1"),  WHEN_RTSELECTED_NOT(1), ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(1),   MR_ORG_Y_IDX(1),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        /* not implemented for now
        BUTTON_RECT_DVAR_WHEN(route2, ADDPREFIX("route2"),  WHEN_RTSELECTED_NOT(2), ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(2),   MR_ORG_Y_IDX(2),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        BUTTON_RECT_DVAR_WHEN(route3, ADDPREFIX("route3"),  WHEN_RTSELECTED_NOT(3), ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(3),   MR_ORG_Y_IDX(3),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        BUTTON_RECT_DVAR_WHEN(route4, ADDPREFIX("route4"),  WHEN_RTSELECTED_NOT(4), ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(4),   MR_ORG_Y_IDX(4),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        BUTTON_RECT_DVAR_WHEN(route5, ADDPREFIX("route5"),  WHEN_RTSELECTED_NOT(5), ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(5),   MR_ORG_Y_IDX(5),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        BUTTON_RECT_DVAR_WHEN(route6, ADDPREFIX("route6"),  WHEN_RTSELECTED_NOT(6), ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(6),   MR_ORG_Y_IDX(6),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        BUTTON_RECT_DVAR_WHEN(route7, ADDPREFIX("route7"),  WHEN_RTSELECTED_NOT(7), ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(7),   MR_ORG_Y_IDX(7),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        BUTTON_RECT_DVAR_WHEN(route8, ADDPREFIX("route8"),  WHEN_RTSELECTED_NOT(8), ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(8),   MR_ORG_Y_IDX(8),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        */
        // Routes (when selected)
        BUTTON_RECT_DVAR_WHEN(route1, ADDPREFIX("route1"),  WHEN_RTSELECTED(1),     MILD_GREEN_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(1),   MR_ORG_Y_IDX(1),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        /* not implemented for now
        BUTTON_RECT_DVAR_WHEN(route2, ADDPREFIX("route2"),  WHEN_RTSELECTED(2),     MILD_GREEN_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(2),   MR_ORG_Y_IDX(2),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        BUTTON_RECT_DVAR_WHEN(route3, ADDPREFIX("route3"),  WHEN_RTSELECTED(3),     MILD_GREEN_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(3),   MR_ORG_Y_IDX(3),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        BUTTON_RECT_DVAR_WHEN(route4, ADDPREFIX("route4"),  WHEN_RTSELECTED(4),     MILD_GREEN_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(4),   MR_ORG_Y_IDX(4),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        BUTTON_RECT_DVAR_WHEN(route5, ADDPREFIX("route5"),  WHEN_RTSELECTED(5),     MILD_GREEN_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(5),   MR_ORG_Y_IDX(5),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        BUTTON_RECT_DVAR_WHEN(route6, ADDPREFIX("route6"),  WHEN_RTSELECTED(6),     MILD_GREEN_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(6),   MR_ORG_Y_IDX(6),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        BUTTON_RECT_DVAR_WHEN(route7, ADDPREFIX("route7"),  WHEN_RTSELECTED(7),     MILD_GREEN_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(7),   MR_ORG_Y_IDX(7),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        BUTTON_RECT_DVAR_WHEN(route8, ADDPREFIX("route8"),  WHEN_RTSELECTED(8),     MILD_GREEN_COLOR, BLACK_COLOR, UI_FONT_NORMAL,  0.15, MR_ORG_X_IDX(8),   MR_ORG_Y_IDX(8),   MR_CELL_SIZE_X, MR_CELL_SIZE_Y)
        */

        // Page buttons & text for routes
            // Normal prev page button (page > 1)
        SEL_SHADER_RECT_WHEN(rtprevpage,    "opencj_icon_leftarrow",  WHITE_COLOR, WHEN_RTPAGE_G_ONE,  ROUTE_PREV_PAGE_BTN_ORG_X,  ROUTE_PREV_PAGE_BTN_ORG_Y,  PAGE_BUTTON_SIZE_X, PAGE_BUTTON_SIZE_Y)

            // Normal next page button (page < max)
        SEL_SHADER_RECT_WHEN(rtnextpage,    "opencj_icon_rightarrow", WHITE_COLOR, WHEN_RTPAGE_S_MAX,  ROUTE_NEXT_PAGE_BTN_ORG_X,  ROUTE_NEXT_PAGE_BTN_ORG_Y,  PAGE_BUTTON_SIZE_X, PAGE_BUTTON_SIZE_Y)

            // Page text
        FIXED_RECT_DVARCENTER(ADDPREFIX("rtpagetxt"), NO_COLOR, WHITE_COLOR, ROUTE_PAGE_TXT_ORG_X, ROUTE_PAGE_TXT_ORG_Y, PAGE_TEXT_SIZE_X, PAGE_TEXT_SIZE_Y)

        // Back button
        BUTTON_RECT_TXT(exit, "Exit", close self, GLAUCOUS_COLOR, WHITE_COLOR, UI_FONT_DEFAULT, 0.30, EXITBTN_ORG_X,    EXITBTN_ORG_Y,    EXITBTN_SIZE_X, EXITBTN_SIZE_Y)
    
    // Actual runsboard columns section
        // Run number column
            // Header
            FIXED_RECT_TXTLEFT ("#",      PERIWINKLE_COLOR, BLACK_COLOR, NR_ORG_X_IDX(0),  NR_ORG_Y_IDX(0),  NR_CELL_SIZE_X, NR_CELL_SIZE_Y)
            // Cells
            FIXED_RECT_DVARLEFT(ADDPREFIX("nr1"),    PERIWINKLE_COLOR, BLACK_COLOR, NR_ORG_X_IDX(1),  NR_ORG_Y_IDX(1),  NR_CELL_SIZE_X, NR_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("nr2"),    PERIWINKLE_COLOR, BLACK_COLOR, NR_ORG_X_IDX(2),  NR_ORG_Y_IDX(2),  NR_CELL_SIZE_X, NR_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("nr3"),    PERIWINKLE_COLOR, BLACK_COLOR, NR_ORG_X_IDX(3),  NR_ORG_Y_IDX(3),  NR_CELL_SIZE_X, NR_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("nr4"),    PERIWINKLE_COLOR, BLACK_COLOR, NR_ORG_X_IDX(4),  NR_ORG_Y_IDX(4),  NR_CELL_SIZE_X, NR_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("nr5"),    PERIWINKLE_COLOR, BLACK_COLOR, NR_ORG_X_IDX(5),  NR_ORG_Y_IDX(5),  NR_CELL_SIZE_X, NR_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("nr6"),    PERIWINKLE_COLOR, BLACK_COLOR, NR_ORG_X_IDX(6),  NR_ORG_Y_IDX(6),  NR_CELL_SIZE_X, NR_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("nr7"),    PERIWINKLE_COLOR, BLACK_COLOR, NR_ORG_X_IDX(7),  NR_ORG_Y_IDX(7),  NR_CELL_SIZE_X, NR_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("nr8"),    PERIWINKLE_COLOR, BLACK_COLOR, NR_ORG_X_IDX(8),  NR_ORG_Y_IDX(8),  NR_CELL_SIZE_X, NR_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("nr9"),    PERIWINKLE_COLOR, BLACK_COLOR, NR_ORG_X_IDX(9),  NR_ORG_Y_IDX(9),  NR_CELL_SIZE_X, NR_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("nr10"),   PERIWINKLE_COLOR, BLACK_COLOR, NR_ORG_X_IDX(10), NR_ORG_Y_IDX(10), NR_CELL_SIZE_X, NR_CELL_SIZE_Y)

        // Name column
            // Header
            FIXED_RECT_TXTLEFT ("Name",     PERIWINKLE_COLOR, BLACK_COLOR, NAME_ORG_X_IDX(0),  NAME_ORG_Y_IDX(0),  NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)

            // Cells
            BUTTON_RECT_DVAR_WHEN(name1,  ADDPREFIX("name1"),  WHEN_NAME_NOT_EMPTY(1),  ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL, 0.20, NAME_ORG_X_IDX(1),   NAME_ORG_Y_IDX(1),   NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            BUTTON_RECT_DVAR_WHEN(name2,  ADDPREFIX("name2"),  WHEN_NAME_NOT_EMPTY(2),  ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL, 0.20, NAME_ORG_X_IDX(2),   NAME_ORG_Y_IDX(2),   NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            BUTTON_RECT_DVAR_WHEN(name3,  ADDPREFIX("name3"),  WHEN_NAME_NOT_EMPTY(3),  ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL, 0.20, NAME_ORG_X_IDX(3),   NAME_ORG_Y_IDX(3),   NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            BUTTON_RECT_DVAR_WHEN(name4,  ADDPREFIX("name4"),  WHEN_NAME_NOT_EMPTY(4),  ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL, 0.20, NAME_ORG_X_IDX(4),   NAME_ORG_Y_IDX(4),   NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            BUTTON_RECT_DVAR_WHEN(name5,  ADDPREFIX("name5"),  WHEN_NAME_NOT_EMPTY(5),  ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL, 0.20, NAME_ORG_X_IDX(5),   NAME_ORG_Y_IDX(5),   NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            BUTTON_RECT_DVAR_WHEN(name6,  ADDPREFIX("name6"),  WHEN_NAME_NOT_EMPTY(6),  ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL, 0.20, NAME_ORG_X_IDX(6),   NAME_ORG_Y_IDX(6),   NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            BUTTON_RECT_DVAR_WHEN(name7,  ADDPREFIX("name7"),  WHEN_NAME_NOT_EMPTY(7),  ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL, 0.20, NAME_ORG_X_IDX(7),   NAME_ORG_Y_IDX(7),   NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            BUTTON_RECT_DVAR_WHEN(name8,  ADDPREFIX("name8"),  WHEN_NAME_NOT_EMPTY(8),  ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL, 0.20, NAME_ORG_X_IDX(8),   NAME_ORG_Y_IDX(8),   NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            BUTTON_RECT_DVAR_WHEN(name9,  ADDPREFIX("name9"),  WHEN_NAME_NOT_EMPTY(9),  ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL, 0.20, NAME_ORG_X_IDX(9),   NAME_ORG_Y_IDX(9),   NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            BUTTON_RECT_DVAR_WHEN(name10, ADDPREFIX("name10"), WHEN_NAME_NOT_EMPTY(10), ALICE_BLUE_COLOR, BLACK_COLOR, UI_FONT_NORMAL, 0.20, NAME_ORG_X_IDX(10),  NAME_ORG_Y_IDX(10),  NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)

            /*
            FIXED_RECT_DVARLEFT(ADDPREFIX("name1"),    ALICE_BLUE_COLOR, BLACK_COLOR, NAME_ORG_X_IDX(1),  NAME_ORG_Y_IDX(1),  NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("name2"),    ALICE_BLUE_COLOR, BLACK_COLOR, NAME_ORG_X_IDX(2),  NAME_ORG_Y_IDX(2),  NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("name3"),    ALICE_BLUE_COLOR, BLACK_COLOR, NAME_ORG_X_IDX(3),  NAME_ORG_Y_IDX(3),  NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("name4"),    ALICE_BLUE_COLOR, BLACK_COLOR, NAME_ORG_X_IDX(4),  NAME_ORG_Y_IDX(4),  NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("name5"),    ALICE_BLUE_COLOR, BLACK_COLOR, NAME_ORG_X_IDX(5),  NAME_ORG_Y_IDX(5),  NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("name6"),    ALICE_BLUE_COLOR, BLACK_COLOR, NAME_ORG_X_IDX(6),  NAME_ORG_Y_IDX(6),  NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("name7"),    ALICE_BLUE_COLOR, BLACK_COLOR, NAME_ORG_X_IDX(7),  NAME_ORG_Y_IDX(7),  NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("name8"),    ALICE_BLUE_COLOR, BLACK_COLOR, NAME_ORG_X_IDX(8),  NAME_ORG_Y_IDX(8),  NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("name9"),    ALICE_BLUE_COLOR, BLACK_COLOR, NAME_ORG_X_IDX(9),  NAME_ORG_Y_IDX(9),  NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("name10"),   ALICE_BLUE_COLOR, BLACK_COLOR, NAME_ORG_X_IDX(10), NAME_ORG_Y_IDX(10), NAME_CELL_SIZE_X, NAME_CELL_SIZE_Y)
            */
        // Time column
            // Header
            SORTABLE_RECT(time, "Time", HEADER_COLOR, TIME_ORG_X_IDX(0),  TIME_ORG_Y_IDX(0),  TIME_CELL_SIZE_X, TIME_CELL_SIZE_Y)
            
            // Sort ascending icon
            SHADER_RECT_WHEN(time_asc,  "opencj_icon_uparrow",   WHEN_TIME_ASC,  TIME_ORDER_ICON_ORG_X, TIME_ORDER_ICON_ORG_Y, TIME_ORDER_ICON_SIZE_X, TIME_ORDER_ICON_SIZE_Y)

            // Sort descending icon
            SHADER_RECT_WHEN(time_desc, "opencj_icon_downarrow", WHEN_TIME_DESC,  TIME_ORDER_ICON_ORG_X, TIME_ORDER_ICON_ORG_Y, TIME_ORDER_ICON_SIZE_X, TIME_ORDER_ICON_SIZE_Y)

            // Cells
            FIXED_RECT_DVARLEFT(ADDPREFIX("time1"),    ALICE_BLUE_COLOR, BLACK_COLOR, TIME_ORG_X_IDX(1),  TIME_ORG_Y_IDX(1),  TIME_CELL_SIZE_X, TIME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("time2"),    ALICE_BLUE_COLOR, BLACK_COLOR, TIME_ORG_X_IDX(2),  TIME_ORG_Y_IDX(2),  TIME_CELL_SIZE_X, TIME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("time3"),    ALICE_BLUE_COLOR, BLACK_COLOR, TIME_ORG_X_IDX(3),  TIME_ORG_Y_IDX(3),  TIME_CELL_SIZE_X, TIME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("time4"),    ALICE_BLUE_COLOR, BLACK_COLOR, TIME_ORG_X_IDX(4),  TIME_ORG_Y_IDX(4),  TIME_CELL_SIZE_X, TIME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("time5"),    ALICE_BLUE_COLOR, BLACK_COLOR, TIME_ORG_X_IDX(5),  TIME_ORG_Y_IDX(5),  TIME_CELL_SIZE_X, TIME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("time6"),    ALICE_BLUE_COLOR, BLACK_COLOR, TIME_ORG_X_IDX(6),  TIME_ORG_Y_IDX(6),  TIME_CELL_SIZE_X, TIME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("time7"),    ALICE_BLUE_COLOR, BLACK_COLOR, TIME_ORG_X_IDX(7),  TIME_ORG_Y_IDX(7),  TIME_CELL_SIZE_X, TIME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("time8"),    ALICE_BLUE_COLOR, BLACK_COLOR, TIME_ORG_X_IDX(8),  TIME_ORG_Y_IDX(8),  TIME_CELL_SIZE_X, TIME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("time9"),    ALICE_BLUE_COLOR, BLACK_COLOR, TIME_ORG_X_IDX(9),  TIME_ORG_Y_IDX(9),  TIME_CELL_SIZE_X, TIME_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("time10"),   ALICE_BLUE_COLOR, BLACK_COLOR, TIME_ORG_X_IDX(10), TIME_ORG_Y_IDX(10), TIME_CELL_SIZE_X, TIME_CELL_SIZE_Y)

        // RPGs column
            // Header
            SORTABLE_RECT      (rpgs, "RPGs", HEADER_COLOR, RPG_ORG_X_IDX(0),  RPG_ORG_Y_IDX(0),  RPG_CELL_SIZE_X, RPG_CELL_SIZE_Y)

            // Sort ascending icon
            SHADER_RECT_WHEN(rpg_asc,  "opencj_icon_uparrow",   WHEN_RPG_ASC,  RPG_ORDER_ICON_ORG_X, RPG_ORDER_ICON_ORG_Y, RPG_ORDER_ICON_SIZE_X, RPG_ORDER_ICON_SIZE_Y)

            // Sort descending icon
            SHADER_RECT_WHEN(rpg_desc, "opencj_icon_downarrow", WHEN_RPG_DESC,  RPG_ORDER_ICON_ORG_X, RPG_ORDER_ICON_ORG_Y, RPG_ORDER_ICON_SIZE_X, RPG_ORDER_ICON_SIZE_Y)

            // Cells
            FIXED_RECT_DVARLEFT(ADDPREFIX("rpgs1"),    ALICE_BLUE_COLOR, BLACK_COLOR, RPG_ORG_X_IDX(1),  RPG_ORG_Y_IDX(1),  RPG_CELL_SIZE_X, RPG_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("rpgs2"),    ALICE_BLUE_COLOR, BLACK_COLOR, RPG_ORG_X_IDX(2),  RPG_ORG_Y_IDX(2),  RPG_CELL_SIZE_X, RPG_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("rpgs3"),    ALICE_BLUE_COLOR, BLACK_COLOR, RPG_ORG_X_IDX(3),  RPG_ORG_Y_IDX(3),  RPG_CELL_SIZE_X, RPG_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("rpgs4"),    ALICE_BLUE_COLOR, BLACK_COLOR, RPG_ORG_X_IDX(4),  RPG_ORG_Y_IDX(4),  RPG_CELL_SIZE_X, RPG_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("rpgs5"),    ALICE_BLUE_COLOR, BLACK_COLOR, RPG_ORG_X_IDX(5),  RPG_ORG_Y_IDX(5),  RPG_CELL_SIZE_X, RPG_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("rpgs6"),    ALICE_BLUE_COLOR, BLACK_COLOR, RPG_ORG_X_IDX(6),  RPG_ORG_Y_IDX(6),  RPG_CELL_SIZE_X, RPG_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("rpgs7"),    ALICE_BLUE_COLOR, BLACK_COLOR, RPG_ORG_X_IDX(7),  RPG_ORG_Y_IDX(7),  RPG_CELL_SIZE_X, RPG_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("rpgs8"),    ALICE_BLUE_COLOR, BLACK_COLOR, RPG_ORG_X_IDX(8),  RPG_ORG_Y_IDX(8),  RPG_CELL_SIZE_X, RPG_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("rpgs9"),    ALICE_BLUE_COLOR, BLACK_COLOR, RPG_ORG_X_IDX(9),  RPG_ORG_Y_IDX(9),  RPG_CELL_SIZE_X, RPG_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("rpgs10"),   ALICE_BLUE_COLOR, BLACK_COLOR, RPG_ORG_X_IDX(10), RPG_ORG_Y_IDX(10), RPG_CELL_SIZE_X, RPG_CELL_SIZE_Y)

        // Loads column
            // Header
            SORTABLE_RECT   (loads,  "Loads", HEADER_COLOR, LOAD_ORG_X_IDX(0),  LOAD_ORG_Y_IDX(0),  LOAD_CELL_SIZE_X, LOAD_CELL_SIZE_Y)

            // Sort ascending icon
            SHADER_RECT_WHEN(load_asc,  "opencj_icon_uparrow",   WHEN_LOAD_ASC,  LOAD_ORDER_ICON_ORG_X, LOAD_ORDER_ICON_ORG_Y, LOAD_ORDER_ICON_SIZE_X, LOAD_ORDER_ICON_SIZE_Y)

            // Sort descending icon
            SHADER_RECT_WHEN(load_desc, "opencj_icon_downarrow", WHEN_LOAD_DESC,  LOAD_ORDER_ICON_ORG_X, LOAD_ORDER_ICON_ORG_Y, LOAD_ORDER_ICON_SIZE_X, LOAD_ORDER_ICON_SIZE_Y)

            // Cells
            FIXED_RECT_DVARLEFT(ADDPREFIX("loads1"),    ALICE_BLUE_COLOR, BLACK_COLOR, LOAD_ORG_X_IDX(1),  LOAD_ORG_Y_IDX(1),  LOAD_CELL_SIZE_X, LOAD_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("loads2"),    ALICE_BLUE_COLOR, BLACK_COLOR, LOAD_ORG_X_IDX(2),  LOAD_ORG_Y_IDX(2),  LOAD_CELL_SIZE_X, LOAD_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("loads3"),    ALICE_BLUE_COLOR, BLACK_COLOR, LOAD_ORG_X_IDX(3),  LOAD_ORG_Y_IDX(3),  LOAD_CELL_SIZE_X, LOAD_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("loads4"),    ALICE_BLUE_COLOR, BLACK_COLOR, LOAD_ORG_X_IDX(4),  LOAD_ORG_Y_IDX(4),  LOAD_CELL_SIZE_X, LOAD_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("loads5"),    ALICE_BLUE_COLOR, BLACK_COLOR, LOAD_ORG_X_IDX(5),  LOAD_ORG_Y_IDX(5),  LOAD_CELL_SIZE_X, LOAD_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("loads6"),    ALICE_BLUE_COLOR, BLACK_COLOR, LOAD_ORG_X_IDX(6),  LOAD_ORG_Y_IDX(6),  LOAD_CELL_SIZE_X, LOAD_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("loads7"),    ALICE_BLUE_COLOR, BLACK_COLOR, LOAD_ORG_X_IDX(7),  LOAD_ORG_Y_IDX(7),  LOAD_CELL_SIZE_X, LOAD_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("loads8"),    ALICE_BLUE_COLOR, BLACK_COLOR, LOAD_ORG_X_IDX(8),  LOAD_ORG_Y_IDX(8),  LOAD_CELL_SIZE_X, LOAD_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("loads9"),    ALICE_BLUE_COLOR, BLACK_COLOR, LOAD_ORG_X_IDX(9),  LOAD_ORG_Y_IDX(9),  LOAD_CELL_SIZE_X, LOAD_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("loads10"),   ALICE_BLUE_COLOR, BLACK_COLOR, LOAD_ORG_X_IDX(10), LOAD_ORG_Y_IDX(10), LOAD_CELL_SIZE_X, LOAD_CELL_SIZE_Y)

        // Date column
            // Header
            SORTABLE_RECT     (date,  "Date", HEADER_COLOR, DATE_ORG_X_IDX(0),  DATE_ORG_Y_IDX(0),  DATE_CELL_SIZE_X, DATE_CELL_SIZE_Y)

            // Sort ascending icon
            SHADER_RECT_WHEN(date_asc,  "opencj_icon_uparrow",   WHEN_DATE_ASC,  DATE_ORDER_ICON_ORG_X, DATE_ORDER_ICON_ORG_Y, DATE_ORDER_ICON_SIZE_X, DATE_ORDER_ICON_SIZE_Y)

            // Sort descending icon
            SHADER_RECT_WHEN(date_desc, "opencj_icon_downarrow", WHEN_DATE_DESC,  DATE_ORDER_ICON_ORG_X, DATE_ORDER_ICON_ORG_Y, DATE_ORDER_ICON_SIZE_X, DATE_ORDER_ICON_SIZE_Y)

            // Cells
            FIXED_RECT_DVARLEFT(ADDPREFIX("date1"),    ALICE_BLUE_COLOR, BLACK_COLOR, DATE_ORG_X_IDX(1),  DATE_ORG_Y_IDX(1),  DATE_CELL_SIZE_X, DATE_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("date2"),    ALICE_BLUE_COLOR, BLACK_COLOR, DATE_ORG_X_IDX(2),  DATE_ORG_Y_IDX(2),  DATE_CELL_SIZE_X, DATE_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("date3"),    ALICE_BLUE_COLOR, BLACK_COLOR, DATE_ORG_X_IDX(3),  DATE_ORG_Y_IDX(3),  DATE_CELL_SIZE_X, DATE_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("date4"),    ALICE_BLUE_COLOR, BLACK_COLOR, DATE_ORG_X_IDX(4),  DATE_ORG_Y_IDX(4),  DATE_CELL_SIZE_X, DATE_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("date5"),    ALICE_BLUE_COLOR, BLACK_COLOR, DATE_ORG_X_IDX(5),  DATE_ORG_Y_IDX(5),  DATE_CELL_SIZE_X, DATE_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("date6"),    ALICE_BLUE_COLOR, BLACK_COLOR, DATE_ORG_X_IDX(6),  DATE_ORG_Y_IDX(6),  DATE_CELL_SIZE_X, DATE_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("date7"),    ALICE_BLUE_COLOR, BLACK_COLOR, DATE_ORG_X_IDX(7),  DATE_ORG_Y_IDX(7),  DATE_CELL_SIZE_X, DATE_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("date8"),    ALICE_BLUE_COLOR, BLACK_COLOR, DATE_ORG_X_IDX(8),  DATE_ORG_Y_IDX(8),  DATE_CELL_SIZE_X, DATE_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("date9"),    ALICE_BLUE_COLOR, BLACK_COLOR, DATE_ORG_X_IDX(9),  DATE_ORG_Y_IDX(9),  DATE_CELL_SIZE_X, DATE_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("date10"),   ALICE_BLUE_COLOR, BLACK_COLOR, DATE_ORG_X_IDX(10), DATE_ORG_Y_IDX(10), DATE_CELL_SIZE_X, DATE_CELL_SIZE_Y)

    // Clickable categories
        // FPS
            // Header
            DROPDOWN_RECT     (opencj_lb_fps, "FPS", UI_FONT_NORMAL, HEADER_COLOR, CAT_FPS_ORG_X_IDX(0), CAT_FPS_ORG_Y_IDX(0), CAT_FPS_CELL_SIZE_X, CAT_FPS_CELL_SIZE_Y)
            // Cells
            FIXED_RECT_DVARLEFT(ADDPREFIX("fps1"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_FPS_ORG_X_IDX(1),  CAT_FPS_ORG_Y_IDX(1),  CAT_FPS_CELL_SIZE_X, CAT_FPS_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("fps2"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_FPS_ORG_X_IDX(2),  CAT_FPS_ORG_Y_IDX(2),  CAT_FPS_CELL_SIZE_X, CAT_FPS_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("fps3"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_FPS_ORG_X_IDX(3),  CAT_FPS_ORG_Y_IDX(3),  CAT_FPS_CELL_SIZE_X, CAT_FPS_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("fps4"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_FPS_ORG_X_IDX(4),  CAT_FPS_ORG_Y_IDX(4),  CAT_FPS_CELL_SIZE_X, CAT_FPS_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("fps5"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_FPS_ORG_X_IDX(5),  CAT_FPS_ORG_Y_IDX(5),  CAT_FPS_CELL_SIZE_X, CAT_FPS_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("fps6"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_FPS_ORG_X_IDX(6),  CAT_FPS_ORG_Y_IDX(6),  CAT_FPS_CELL_SIZE_X, CAT_FPS_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("fps7"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_FPS_ORG_X_IDX(7),  CAT_FPS_ORG_Y_IDX(7),  CAT_FPS_CELL_SIZE_X, CAT_FPS_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("fps8"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_FPS_ORG_X_IDX(8),  CAT_FPS_ORG_Y_IDX(8),  CAT_FPS_CELL_SIZE_X, CAT_FPS_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("fps9"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_FPS_ORG_X_IDX(9),  CAT_FPS_ORG_Y_IDX(9),  CAT_FPS_CELL_SIZE_X, CAT_FPS_CELL_SIZE_Y)
            FIXED_RECT_DVARLEFT(ADDPREFIX("fps10"),   ALICE_BLUE_COLOR, BLACK_COLOR, CAT_FPS_ORG_X_IDX(10), CAT_FPS_ORG_Y_IDX(10), CAT_FPS_CELL_SIZE_X, CAT_FPS_CELL_SIZE_Y)

        // Elevator
            // Header (when filtered to be 'allowed')
            SEL_SHADER_RECT_WHEN(ele, "opencj_icon_ele", GREEN_COLOR, WHEN_ELE_YES, CAT_ELE_ORG_X_IDX(0),  CAT_ELE_ORG_Y_IDX(0),  CAT_ELE_CELL_SIZE_X, CAT_ELE_CELL_SIZE_Y)

            // Header (when filtered to be 'disallowed')
            SEL_SHADER_RECT_WHEN(ele, "opencj_icon_ele", RED_COLOR,   WHEN_ELE_NO,  CAT_ELE_ORG_X_IDX(0),  CAT_ELE_ORG_Y_IDX(0),  CAT_ELE_CELL_SIZE_X, CAT_ELE_CELL_SIZE_Y)

            // Cells
            FIXED_RECT_DVARCENTER (ADDPREFIX("ele1"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ELE_ORG_X_IDX(1),  CAT_ELE_ORG_Y_IDX(1),  CAT_ELE_CELL_SIZE_X, CAT_ELE_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("ele2"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ELE_ORG_X_IDX(2),  CAT_ELE_ORG_Y_IDX(2),  CAT_ELE_CELL_SIZE_X, CAT_ELE_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("ele3"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ELE_ORG_X_IDX(3),  CAT_ELE_ORG_Y_IDX(3),  CAT_ELE_CELL_SIZE_X, CAT_ELE_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("ele4"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ELE_ORG_X_IDX(4),  CAT_ELE_ORG_Y_IDX(4),  CAT_ELE_CELL_SIZE_X, CAT_ELE_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("ele5"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ELE_ORG_X_IDX(5),  CAT_ELE_ORG_Y_IDX(5),  CAT_ELE_CELL_SIZE_X, CAT_ELE_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("ele6"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ELE_ORG_X_IDX(6),  CAT_ELE_ORG_Y_IDX(6),  CAT_ELE_CELL_SIZE_X, CAT_ELE_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("ele7"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ELE_ORG_X_IDX(7),  CAT_ELE_ORG_Y_IDX(7),  CAT_ELE_CELL_SIZE_X, CAT_ELE_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("ele8"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ELE_ORG_X_IDX(8),  CAT_ELE_ORG_Y_IDX(8),  CAT_ELE_CELL_SIZE_X, CAT_ELE_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("ele9"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ELE_ORG_X_IDX(9),  CAT_ELE_ORG_Y_IDX(9),  CAT_ELE_CELL_SIZE_X, CAT_ELE_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("ele10"),   ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ELE_ORG_X_IDX(10), CAT_ELE_ORG_Y_IDX(10), CAT_ELE_CELL_SIZE_X, CAT_ELE_CELL_SIZE_Y)

        // Any%
            // Header (when filtered to be 'allowed')
            SEL_SHADER_RECT_WHEN(any, "opencj_icon_anypct", GREEN_COLOR, WHEN_ANYPCT_YES, CAT_ANYPCT_ORG_X_IDX(0),  CAT_ANYPCT_ORG_Y_IDX(0),  CAT_ANYPCT_CELL_SIZE_X, CAT_ANYPCT_CELL_SIZE_Y)

            // Header (when filtered to be 'disallowed')
            SEL_SHADER_RECT_WHEN(any, "opencj_icon_anypct", RED_COLOR,   WHEN_ANYPCT_NO,  CAT_ANYPCT_ORG_X_IDX(0),  CAT_ANYPCT_ORG_Y_IDX(0),  CAT_ANYPCT_CELL_SIZE_X, CAT_ANYPCT_CELL_SIZE_Y)

            // Cells
            FIXED_RECT_DVARCENTER (ADDPREFIX("any1"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ANYPCT_ORG_X_IDX(1),  CAT_ANYPCT_ORG_Y_IDX(1),  CAT_ANYPCT_CELL_SIZE_X, CAT_ANYPCT_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("any2"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ANYPCT_ORG_X_IDX(2),  CAT_ANYPCT_ORG_Y_IDX(2),  CAT_ANYPCT_CELL_SIZE_X, CAT_ANYPCT_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("any3"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ANYPCT_ORG_X_IDX(3),  CAT_ANYPCT_ORG_Y_IDX(3),  CAT_ANYPCT_CELL_SIZE_X, CAT_ANYPCT_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("any4"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ANYPCT_ORG_X_IDX(4),  CAT_ANYPCT_ORG_Y_IDX(4),  CAT_ANYPCT_CELL_SIZE_X, CAT_ANYPCT_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("any5"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ANYPCT_ORG_X_IDX(5),  CAT_ANYPCT_ORG_Y_IDX(5),  CAT_ANYPCT_CELL_SIZE_X, CAT_ANYPCT_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("any6"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ANYPCT_ORG_X_IDX(6),  CAT_ANYPCT_ORG_Y_IDX(6),  CAT_ANYPCT_CELL_SIZE_X, CAT_ANYPCT_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("any7"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ANYPCT_ORG_X_IDX(7),  CAT_ANYPCT_ORG_Y_IDX(7),  CAT_ANYPCT_CELL_SIZE_X, CAT_ANYPCT_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("any8"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ANYPCT_ORG_X_IDX(8),  CAT_ANYPCT_ORG_Y_IDX(8),  CAT_ANYPCT_CELL_SIZE_X, CAT_ANYPCT_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("any9"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ANYPCT_ORG_X_IDX(9),  CAT_ANYPCT_ORG_Y_IDX(9),  CAT_ANYPCT_CELL_SIZE_X, CAT_ANYPCT_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("any10"),   ALICE_BLUE_COLOR, BLACK_COLOR, CAT_ANYPCT_ORG_X_IDX(10), CAT_ANYPCT_ORG_Y_IDX(10), CAT_ANYPCT_CELL_SIZE_X, CAT_ANYPCT_CELL_SIZE_Y)

        // TAS
            // Header (when filtered to be 'allowed')
            SEL_SHADER_RECT_WHEN(tas, "opencj_icon_tas", GREEN_COLOR, WHEN_TAS_YES, CAT_TAS_ORG_X_IDX(0),  CAT_TAS_ORG_Y_IDX(0), CAT_TAS_CELL_SIZE_X, CAT_TAS_CELL_SIZE_Y)

            // Header (when filtered to be 'disallowed')
            SEL_SHADER_RECT_WHEN(tas, "opencj_icon_tas", RED_COLOR,   WHEN_TAS_NO, CAT_TAS_ORG_X_IDX(0),  CAT_TAS_ORG_Y_IDX(0), CAT_TAS_CELL_SIZE_X, CAT_TAS_CELL_SIZE_Y)

            // Cells
            FIXED_RECT_DVARCENTER (ADDPREFIX("tas1"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_TAS_ORG_X_IDX(1),  CAT_TAS_ORG_Y_IDX(1),  CAT_TAS_CELL_SIZE_X, CAT_TAS_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("tas2"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_TAS_ORG_X_IDX(2),  CAT_TAS_ORG_Y_IDX(2),  CAT_TAS_CELL_SIZE_X, CAT_TAS_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("tas3"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_TAS_ORG_X_IDX(3),  CAT_TAS_ORG_Y_IDX(3),  CAT_TAS_CELL_SIZE_X, CAT_TAS_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("tas4"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_TAS_ORG_X_IDX(4),  CAT_TAS_ORG_Y_IDX(4),  CAT_TAS_CELL_SIZE_X, CAT_TAS_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("tas5"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_TAS_ORG_X_IDX(5),  CAT_TAS_ORG_Y_IDX(5),  CAT_TAS_CELL_SIZE_X, CAT_TAS_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("tas6"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_TAS_ORG_X_IDX(6),  CAT_TAS_ORG_Y_IDX(6),  CAT_TAS_CELL_SIZE_X, CAT_TAS_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("tas7"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_TAS_ORG_X_IDX(7),  CAT_TAS_ORG_Y_IDX(7),  CAT_TAS_CELL_SIZE_X, CAT_TAS_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("tas8"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_TAS_ORG_X_IDX(8),  CAT_TAS_ORG_Y_IDX(8),  CAT_TAS_CELL_SIZE_X, CAT_TAS_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("tas9"),    ALICE_BLUE_COLOR, BLACK_COLOR, CAT_TAS_ORG_X_IDX(9),  CAT_TAS_ORG_Y_IDX(9),  CAT_TAS_CELL_SIZE_X, CAT_TAS_CELL_SIZE_Y)
            FIXED_RECT_DVARCENTER (ADDPREFIX("tas10"),   ALICE_BLUE_COLOR, BLACK_COLOR, CAT_TAS_ORG_X_IDX(10), CAT_TAS_ORG_Y_IDX(10), CAT_TAS_CELL_SIZE_X, CAT_TAS_CELL_SIZE_Y)

        // Page buttons for board
            // Normal prev page button (page > 1)
        SEL_SHADER_RECT_WHEN(prevpage,    "opencj_icon_leftarrow",  WHITE_COLOR, WHEN_BOARDPAGE_G_ONE,  BOARD_PREV_PAGE_BTN_ORG_X,  BOARD_PREV_PAGE_BTN_ORG_Y,  PAGE_BUTTON_SIZE_X, PAGE_BUTTON_SIZE_Y)

            // Normal next page button (page < max)
        SEL_SHADER_RECT_WHEN(nextpage,    "opencj_icon_rightarrow", WHITE_COLOR, WHEN_BOARDPAGE_S_MAX,  BOARD_NEXT_PAGE_BTN_ORG_X,  BOARD_NEXT_PAGE_BTN_ORG_Y,  PAGE_BUTTON_SIZE_X, PAGE_BUTTON_SIZE_Y)

            // Page text
        FIXED_RECT_DVARCENTER(ADDPREFIX("pagetxt"), NO_COLOR, WHITE_COLOR, BOARD_PAGE_TXT_ORG_X, BOARD_PAGE_TXT_ORG_Y, PAGE_TEXT_SIZE_X, PAGE_TEXT_SIZE_Y)
    } // menuDef
}